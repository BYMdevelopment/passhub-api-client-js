/**
 * PassHub API
 * PassHub API documentation
 *
 * OpenAPI spec version: 1.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GenericStatusDTO', 'model/OrderRecordDTO', 'model/OrderRecordExtendDTO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/GenericStatusDTO'), require('../model/OrderRecordDTO'), require('../model/OrderRecordExtendDTO'));
  } else {
    // Browser globals (root is window)
    if (!root.PassHubApi) {
      root.PassHubApi = {};
    }
    root.PassHubApi.OrderRecordResourceApi = factory(root.PassHubApi.ApiClient, root.PassHubApi.GenericStatusDTO, root.PassHubApi.OrderRecordDTO, root.PassHubApi.OrderRecordExtendDTO);
  }
}(this, function(ApiClient, GenericStatusDTO, OrderRecordDTO, OrderRecordExtendDTO) {
  'use strict';

  /**
   * OrderRecordResource service.
   * @module api/OrderRecordResourceApi
   * @version 1.1
   */

  /**
   * Constructs a new OrderRecordResourceApi. 
   * @alias module:api/OrderRecordResourceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createOrderRecord operation.
     * @callback module:api/OrderRecordResourceApi~createOrderRecordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderRecordDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * createOrderRecord
     * 1) Cellphone number must be in E.164 format;&lt;br/&gt;2) «PricePaid» is a price for 1 product;&lt;br/&gt;3) Required permissions: CAN_CREATE_ORDER.
     * @param {module:model/OrderRecordDTO} orderRecordDto the OrderRecord Dto
     * @param {module:api/OrderRecordResourceApi~createOrderRecordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderRecordDTO}
     */
    this.createOrderRecord = function(orderRecordDto, callback) {
      var postBody = orderRecordDto;

      // verify the required parameter 'orderRecordDto' is set
      if (orderRecordDto === undefined || orderRecordDto === null) {
        throw new Error("Missing the required parameter 'orderRecordDto' when calling createOrderRecord");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Api-Key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = OrderRecordDTO;

      return this.apiClient.callApi(
        '/api/v1/orderRecords', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAllOrderRecords operation.
     * @callback module:api/OrderRecordResourceApi~getAllOrderRecordsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OrderRecordExtendDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getAllOrderRecords
     * Required permissions: CAN_GET_ORDERS
     * @param {Object} opts Optional parameters
     * @param {String} opts.query query text
     * @param {String} opts.from Begin the of date range, format: YYYY-MM-DD (e.g. 2016-01-25)
     * @param {String} opts.till End the of date range, format: YYYY-MM-DD (e.g. 2016-01-25)
     * @param {String} opts.timeZone A timezone for date/time representation. Example: America/Chicago or EST. If zone is not set, then UTC timezone will be used.
     * @param {module:model/String} opts.deliveryMethod delivery method
     * @param {module:model/String} opts.deliveryStatus status of delivery
     * @param {Number} opts.size quantity of listed records on page
     * @param {Number} opts.page listing starts from page value
     * @param {module:model/String} opts.sortBy sort by
     * @param {module:model/String} opts.sortOrder sort order
     * @param {module:api/OrderRecordResourceApi~getAllOrderRecordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OrderRecordExtendDTO>}
     */
    this.getAllOrderRecords = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'query': opts['query'],
        'from': opts['from'],
        'till': opts['till'],
        'timeZone': opts['timeZone'],
        'deliveryMethod': opts['deliveryMethod'],
        'deliveryStatus': opts['deliveryStatus'],
        'size': opts['size'],
        'page': opts['page'],
        'sortBy': opts['sortBy'],
        'sortOrder': opts['sortOrder'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Api-Key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [OrderRecordExtendDTO];

      return this.apiClient.callApi(
        '/api/v2/orderRecords', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrderRecord operation.
     * @callback module:api/OrderRecordResourceApi~getOrderRecordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderRecordExtendDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getOrderRecord
     * Required permissions: CAN_GET_ORDERS
     * @param {Number} id the internal id of order
     * @param {module:api/OrderRecordResourceApi~getOrderRecordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderRecordExtendDTO}
     */
    this.getOrderRecord = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOrderRecord");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Api-Key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = OrderRecordExtendDTO;

      return this.apiClient.callApi(
        '/api/v1/orderRecords/{id}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the mergeVouchers operation.
     * @callback module:api/OrderRecordResourceApi~mergeVouchersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GenericStatusDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * mergeVouchers
     * Replaces voucher IDs of order items with new voucher ID in the specified order. All groups are merged to one &#39;MergedGroup&#39;.&lt;br/&gt;Required permissions: CAN_EDIT_ORDER
     * @param {Number} orderId the internal id of order
     * @param {String} newVoucherId newVoucherId
     * @param {module:api/OrderRecordResourceApi~mergeVouchersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GenericStatusDTO}
     */
    this.mergeVouchers = function(orderId, newVoucherId, callback) {
      var postBody = null;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling mergeVouchers");
      }

      // verify the required parameter 'newVoucherId' is set
      if (newVoucherId === undefined || newVoucherId === null) {
        throw new Error("Missing the required parameter 'newVoucherId' when calling mergeVouchers");
      }


      var pathParams = {
      };
      var queryParams = {
        'orderId': orderId,
        'newVoucherId': newVoucherId,
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Api-Key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GenericStatusDTO;

      return this.apiClient.callApi(
        '/api/v1/orderRecords/mergeVouchers', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateOrderRecord operation.
     * @callback module:api/OrderRecordResourceApi~updateOrderRecordCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OrderRecordDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * updateOrderRecord
     * 1) Cellphone number must be in E.164 format;&lt;br/&gt;2) «PricePaid» is a price for 1 product;&lt;br/&gt;3) Required permissions: CAN_EDIT_ORDER.
     * @param {module:model/OrderRecordDTO} orderRecordDto the OrderRecord Dto
     * @param {module:api/OrderRecordResourceApi~updateOrderRecordCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OrderRecordDTO}
     */
    this.updateOrderRecord = function(orderRecordDto, callback) {
      var postBody = orderRecordDto;

      // verify the required parameter 'orderRecordDto' is set
      if (orderRecordDto === undefined || orderRecordDto === null) {
        throw new Error("Missing the required parameter 'orderRecordDto' when calling updateOrderRecord");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['X-Api-Key'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = OrderRecordDTO;

      return this.apiClient.callApi(
        '/api/v1/orderRecords', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
